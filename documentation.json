{
    "pipes": [],
    "interfaces": [
        {
            "name": "IDatepickerLocale",
            "id": "interface-IDatepickerLocale-01f667478cca321686ab9ab7d731a072",
            "file": "src/app/datepicker/models/IDatepickerLocale.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {IDatepickerLocaleConfig} from \"./IDatepickerLocaleConfig\";\r\n\r\nexport interface IDatepickerLocale extends IDatepickerLocaleConfig {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "IDatepickerLocaleConfig"
        },
        {
            "name": "IDatepickerLocaleConfig",
            "id": "interface-IDatepickerLocaleConfig-607a0115075619aeb7e116febd66b7f6",
            "file": "src/app/datepicker/models/IDatepickerLocaleConfig.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {TDatepickerWeekStart} from \"./TDatepickerWeekStart\";\r\n\r\nexport interface IDatepickerLocaleConfig {\r\n  months?: string[];\r\n  weekDaysMin?: string[];\r\n  weekStart?: TDatepickerWeekStart;\r\n  dateFormat?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "months",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "weekDaysMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "weekStart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TDatepickerWeekStart",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "IInitConfig",
            "id": "interface-IInitConfig-7180ac7700ecaeb0aa11dcac1fbf285d",
            "file": "src/app/datepicker/models/DatepickerConfig.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface IInitConfig {\r\n  dateFormat: string;\r\n}\r\ninterface IPartialConfig {\r\n  allowTime: boolean;\r\n  timeFormat: string;\r\n}\r\ntype TConfig = IInitConfig & IPartialConfig;\r\n\r\nconst defaultDatepickerConfig: IPartialConfig = {\r\n  allowTime: false,\r\n  timeFormat: 'HH:mm:ss'\r\n}\r\n\r\nexport class DatepickerConfig {\r\n  private _allowTime: boolean;\r\n  private _dateFormat: string;\r\n  private _timeFormat: string;\r\n\r\n  public get allowTime(): boolean {\r\n    return this._allowTime;\r\n  }\r\n  public set allowTime(v: boolean) {\r\n    this._allowTime = v;\r\n  }\r\n\r\n  public get dateFormat(): string {\r\n    return this._dateFormat;\r\n  }\r\n  public set dateFormat(v: string) {\r\n    this._dateFormat = v;\r\n  }\r\n\r\n  public get timeFormat(): string {\r\n    return this._timeFormat;\r\n  }\r\n  public set timeFormat(v: string) {\r\n    this._timeFormat = v;\r\n  }\r\n\r\n\r\n  constructor(\r\n    config: IInitConfig\r\n  ) {\r\n    const datepickerConfig: TConfig = {\r\n      ...defaultDatepickerConfig,\r\n      ...config\r\n    };\r\n    this._allowTime = datepickerConfig.allowTime;\r\n    this._dateFormat = datepickerConfig.dateFormat;\r\n    this._timeFormat = datepickerConfig.timeFormat;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "IPartialConfig",
            "id": "interface-IPartialConfig-7180ac7700ecaeb0aa11dcac1fbf285d",
            "file": "src/app/datepicker/models/DatepickerConfig.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface IInitConfig {\r\n  dateFormat: string;\r\n}\r\ninterface IPartialConfig {\r\n  allowTime: boolean;\r\n  timeFormat: string;\r\n}\r\ntype TConfig = IInitConfig & IPartialConfig;\r\n\r\nconst defaultDatepickerConfig: IPartialConfig = {\r\n  allowTime: false,\r\n  timeFormat: 'HH:mm:ss'\r\n}\r\n\r\nexport class DatepickerConfig {\r\n  private _allowTime: boolean;\r\n  private _dateFormat: string;\r\n  private _timeFormat: string;\r\n\r\n  public get allowTime(): boolean {\r\n    return this._allowTime;\r\n  }\r\n  public set allowTime(v: boolean) {\r\n    this._allowTime = v;\r\n  }\r\n\r\n  public get dateFormat(): string {\r\n    return this._dateFormat;\r\n  }\r\n  public set dateFormat(v: string) {\r\n    this._dateFormat = v;\r\n  }\r\n\r\n  public get timeFormat(): string {\r\n    return this._timeFormat;\r\n  }\r\n  public set timeFormat(v: string) {\r\n    this._timeFormat = v;\r\n  }\r\n\r\n\r\n  constructor(\r\n    config: IInitConfig\r\n  ) {\r\n    const datepickerConfig: TConfig = {\r\n      ...defaultDatepickerConfig,\r\n      ...config\r\n    };\r\n    this._allowTime = datepickerConfig.allowTime;\r\n    this._dateFormat = datepickerConfig.dateFormat;\r\n    this._timeFormat = datepickerConfig.timeFormat;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "allowTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "timeFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "DatepickerDateService",
            "id": "injectable-DatepickerDateService-7ed4a9dab60e029e6211892980f891b6",
            "file": "src/app/datepicker/services/datepicker-date.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "config",
                            "type": "ConfigType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "DatepickerDate",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "ConfigType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Inject, Injectable} from '@angular/core';\r\nimport {DatepickerDate} from \"../models/DatepickerDate\";\r\nimport * as dayjs from 'dayjs';\r\nimport * as updateLocale from 'dayjs/plugin/updateLocale';\r\nimport * as weekday from 'dayjs/plugin/weekday';\r\nimport * as customParseFormat from 'dayjs/plugin/customParseFormat';\r\nimport {ConfigType} from \"dayjs\";\r\nimport {DatepickerLocale} from \"../injection-tokens/DatepickerLocale\";\r\nimport {IDatepickerLocale} from \"../models/IDatepickerLocale\";\r\n\r\n@Injectable()\r\nexport class DatepickerDateService {\r\n  constructor(\r\n    @Inject(DatepickerLocale) private localeConfig: IDatepickerLocale\r\n  ) {\r\n    dayjs.extend(updateLocale);\r\n    dayjs.extend(weekday);\r\n    dayjs.extend(customParseFormat);\r\n    // Dayjs locale name does not change\r\n    dayjs.updateLocale('en', {\r\n      weekStart: this.localeConfig.weekStart\r\n    });\r\n  }\r\n\r\n  public create(config?: ConfigType): DatepickerDate {\r\n    return new DatepickerDate(config);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "localeConfig",
                        "type": "IDatepickerLocale",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "localeConfig",
                        "type": "IDatepickerLocale",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DatepickerOverlayService",
            "id": "injectable-DatepickerOverlayService-dfc9b28321ac3051b19411ff0d8f18e1",
            "file": "src/app/datepicker/services/datepicker-overlay.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "attachOverlayContainer",
                    "args": [
                        {
                            "name": "overlayRef",
                            "type": "OverlayRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dialogRef",
                            "type": "DatepickerOverlayRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "datepickerService",
                            "type": "DatepickerService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "DatepickerConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "DatepickerOverlayComponent",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "overlayRef",
                            "type": "OverlayRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dialogRef",
                            "type": "DatepickerOverlayRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "datepickerService",
                            "type": "DatepickerService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "DatepickerConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createInjector",
                    "args": [
                        {
                            "name": "dialogRef",
                            "type": "DatepickerOverlayRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "datepickerService",
                            "type": "DatepickerService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "DatepickerConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Injector",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "dialogRef",
                            "type": "DatepickerOverlayRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "datepickerService",
                            "type": "DatepickerService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "DatepickerConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createOverlay",
                    "args": [
                        {
                            "name": "connectedTo",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "connectedTo",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOverlayConfig",
                    "args": [
                        {
                            "name": "connectedTo",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "connectedTo",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "connectedTo",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "datepickerService",
                            "type": "DatepickerService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "DatepickerConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "connectedTo",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "datepickerService",
                            "type": "DatepickerService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "DatepickerConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ComponentRef, ElementRef, Injectable, InjectionToken, Injector } from '@angular/core';\r\nimport {Overlay, OverlayConfig, OverlayRef} from \"@angular/cdk/overlay\";\r\nimport {DatepickerOverlayComponent} from \"../components/datepicker-overlay/datepicker-overlay.component\";\r\nimport {ComponentPortal} from \"@angular/cdk/portal\";\r\nimport {DatepickerOverlayRef} from \"../models/DatepickerOverlayRef\";\r\nimport {DatepickerService} from \"./datepicker.service\";\r\nimport { DatepickerConfig } from \"../models/DatepickerConfig\";\r\n\r\nexport const DatepickerConfigToken = new InjectionToken<DatepickerConfig>('DatepickerConfig');\r\n\r\n@Injectable()\r\nexport class DatepickerOverlayService {\r\n\r\n  constructor(\r\n    private overlay: Overlay,\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  public open(connectedTo: ElementRef, datepickerService: DatepickerService, config?: DatepickerConfig) {\r\n    const overlayRef = this.createOverlay(connectedTo);\r\n    const dialogRef = new DatepickerOverlayRef(overlayRef);\r\n    this.attachOverlayContainer(overlayRef, dialogRef, datepickerService, config);\r\n    overlayRef.backdropClick().subscribe(() => dialogRef.close());\r\n    return dialogRef;\r\n  }\r\n\r\n  private createOverlay(connectedTo: ElementRef) {\r\n    const overlayConfig = this.getOverlayConfig(connectedTo);\r\n    return this.overlay.create(overlayConfig);\r\n  }\r\n\r\n  private attachOverlayContainer(overlayRef: OverlayRef, dialogRef: DatepickerOverlayRef, datepickerService: DatepickerService, config?: DatepickerConfig): DatepickerOverlayComponent {\r\n    const injector = this.createInjector(dialogRef, datepickerService, config);\r\n    const containerPortal = new ComponentPortal(DatepickerOverlayComponent, null, injector);\r\n    const containerRef: ComponentRef<DatepickerOverlayComponent> = overlayRef.attach(containerPortal);\r\n    return containerRef.instance;\r\n  }\r\n\r\n  private getOverlayConfig(connectedTo: ElementRef) {\r\n    const positionStrategy = this.overlay.position()\r\n      .flexibleConnectedTo(connectedTo)\r\n      .withPositions([{\r\n        originX: 'start',\r\n        originY: 'bottom',\r\n        overlayX: 'start',\r\n        overlayY: 'top',\r\n      }]);\r\n\r\n    const overlayConfig = new OverlayConfig({\r\n      hasBackdrop: true,\r\n      backdropClass: 'my-backdrop',\r\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\r\n      positionStrategy\r\n    });\r\n\r\n    return overlayConfig;\r\n  }\r\n\r\n  private createInjector(dialogRef: DatepickerOverlayRef, datepickerService: DatepickerService, config?: DatepickerConfig): Injector {\r\n    return Injector.create({\r\n      parent: this.injector,\r\n       providers: [\r\n         { provide: DatepickerOverlayRef, useValue: dialogRef },\r\n         { provide: DatepickerService, useValue: datepickerService },\r\n         { provide: DatepickerConfigToken, useValue: config }\r\n       ]\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DatepickerService",
            "id": "injectable-DatepickerService-9abb78027334e13d1a14cf49cdd36ca1",
            "file": "src/app/datepicker/services/datepicker.service.ts",
            "properties": [
                {
                    "name": "_currentSelectedDate$",
                    "defaultValue": "new BehaviorSubject<DatepickerDate>(this.datepickerDateService.create())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<DatepickerDate>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_selectedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatepickerDate | undefined",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_selectedDate$",
                    "defaultValue": "new BehaviorSubject<DatepickerDate | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<DatepickerDate | null>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getMonthDates",
                    "args": [
                        {
                            "name": "d",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "[][]",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "d",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getYears",
                    "args": [
                        {
                            "name": "offset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "offset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentSelectedDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { DatepickerDate } from \"../models/DatepickerDate\";\r\nimport { DatepickerDateService } from \"./datepicker-date.service\";\r\n\r\n\r\n@Injectable()\r\nexport class DatepickerService {\r\n  private _selectedDate$: BehaviorSubject<DatepickerDate | null> = new BehaviorSubject<DatepickerDate | null>(null);\r\n\r\n  private _selectedDate: DatepickerDate | undefined;\r\n\r\n  private _currentSelectedDate$: BehaviorSubject<DatepickerDate> = new BehaviorSubject<DatepickerDate>(this.datepickerDateService.create());\r\n\r\n  public get selectedDate$(): Observable<DatepickerDate | null> {\r\n    return this._selectedDate$.pipe();\r\n  }\r\n\r\n  public get selectedDate(): DatepickerDate | undefined {\r\n    return this._selectedDate;\r\n  }\r\n\r\n  public get currentSelectedDate$(): Observable<DatepickerDate> {\r\n    return this._currentSelectedDate$.pipe();\r\n  }\r\n\r\n  public get currentSelectedDate(): DatepickerDate {\r\n    return this._currentSelectedDate$.getValue();\r\n  }\r\n\r\n  public get currentDate(): DatepickerDate {\r\n    return this.datepickerDateService.create();\r\n  }\r\n\r\n  constructor(\r\n    private datepickerDateService: DatepickerDateService\r\n  ) {  }\r\n\r\n  setSelectedDate(date: Date): void {\r\n    this._selectedDate$.next(this.datepickerDateService.create(date));\r\n  }\r\n\r\n  setCurrentSelectedDate(date: Date): void {\r\n    this._currentSelectedDate$.next(this.datepickerDateService.create(date));\r\n  }\r\n\r\n  getMonthDates(d: Date): (DatepickerDate | null)[][] {\r\n    const date = this.datepickerDateService.create(d).setDate(1);\r\n    const monthStartDay: number = date.getDay();\r\n    const daysInMonth = date.getDaysInMonth();\r\n    const daysInMonthWithStartNulls = daysInMonth + monthStartDay;\r\n    const flatMonthDays = new Array(daysInMonthWithStartNulls).fill(null).map((_, i) => {\r\n      if (i < monthStartDay || i > daysInMonthWithStartNulls) { return null }\r\n      else {\r\n        return date.setDate(i - monthStartDay + 1);\r\n      }\r\n    });\r\n\r\n    const DAYS_IN_WEEK = 7;\r\n    const result: (DatepickerDate | null)[][] = [];\r\n    while(flatMonthDays.length > 0) {\r\n      const weekDates = flatMonthDays.splice(0, DAYS_IN_WEEK);\r\n      result.push(weekDates);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getYears(offset: number = 0): number[] {\r\n    const selectedYear = this.currentSelectedDate.getYear();\r\n    const startDecadeYear = (Math.floor(selectedYear / 10) + offset) * 10;\r\n    return new Array(10).fill(0).map((v, i) => startDecadeYear + i);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "datepickerDateService",
                        "type": "DatepickerDateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "datepickerDateService",
                        "type": "DatepickerDateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "selectedDate$": {
                    "name": "selectedDate$",
                    "getSignature": {
                        "name": "selectedDate$",
                        "type": "",
                        "returnType": "Observable<DatepickerDate | null>",
                        "line": 15
                    }
                },
                "selectedDate": {
                    "name": "selectedDate",
                    "getSignature": {
                        "name": "selectedDate",
                        "type": "",
                        "returnType": "DatepickerDate | undefined",
                        "line": 19
                    }
                },
                "currentSelectedDate$": {
                    "name": "currentSelectedDate$",
                    "getSignature": {
                        "name": "currentSelectedDate$",
                        "type": "",
                        "returnType": "Observable<DatepickerDate>",
                        "line": 23
                    }
                },
                "currentSelectedDate": {
                    "name": "currentSelectedDate",
                    "getSignature": {
                        "name": "currentSelectedDate",
                        "type": "",
                        "returnType": "DatepickerDate",
                        "line": 27
                    }
                },
                "currentDate": {
                    "name": "currentDate",
                    "getSignature": {
                        "name": "currentDate",
                        "type": "",
                        "returnType": "DatepickerDate",
                        "line": 31
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "DestroyService",
            "id": "injectable-DestroyService-e96c30c0df59ad797af18032f008d6f9",
            "file": "src/app/shared/services/destroy.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable, OnDestroy} from '@angular/core';\r\nimport {Subject} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class DestroyService extends Subject<void> implements OnDestroy {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.next();\r\n    this.complete();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "extends": "Subject",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DatepickerConfig",
            "id": "class-DatepickerConfig-7180ac7700ecaeb0aa11dcac1fbf285d",
            "file": "src/app/datepicker/models/DatepickerConfig.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "interface IInitConfig {\r\n  dateFormat: string;\r\n}\r\ninterface IPartialConfig {\r\n  allowTime: boolean;\r\n  timeFormat: string;\r\n}\r\ntype TConfig = IInitConfig & IPartialConfig;\r\n\r\nconst defaultDatepickerConfig: IPartialConfig = {\r\n  allowTime: false,\r\n  timeFormat: 'HH:mm:ss'\r\n}\r\n\r\nexport class DatepickerConfig {\r\n  private _allowTime: boolean;\r\n  private _dateFormat: string;\r\n  private _timeFormat: string;\r\n\r\n  public get allowTime(): boolean {\r\n    return this._allowTime;\r\n  }\r\n  public set allowTime(v: boolean) {\r\n    this._allowTime = v;\r\n  }\r\n\r\n  public get dateFormat(): string {\r\n    return this._dateFormat;\r\n  }\r\n  public set dateFormat(v: string) {\r\n    this._dateFormat = v;\r\n  }\r\n\r\n  public get timeFormat(): string {\r\n    return this._timeFormat;\r\n  }\r\n  public set timeFormat(v: string) {\r\n    this._timeFormat = v;\r\n  }\r\n\r\n\r\n  constructor(\r\n    config: IInitConfig\r\n  ) {\r\n    const datepickerConfig: TConfig = {\r\n      ...defaultDatepickerConfig,\r\n      ...config\r\n    };\r\n    this._allowTime = datepickerConfig.allowTime;\r\n    this._dateFormat = datepickerConfig.dateFormat;\r\n    this._timeFormat = datepickerConfig.timeFormat;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "IInitConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "IInitConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_allowTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_timeFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "allowTime": {
                    "name": "allowTime",
                    "setSignature": {
                        "name": "allowTime",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "allowTime",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 20
                    }
                },
                "dateFormat": {
                    "name": "dateFormat",
                    "setSignature": {
                        "name": "dateFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dateFormat",
                        "type": "string",
                        "returnType": "string",
                        "line": 27
                    }
                },
                "timeFormat": {
                    "name": "timeFormat",
                    "setSignature": {
                        "name": "timeFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 37,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "timeFormat",
                        "type": "string",
                        "returnType": "string",
                        "line": 34
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DatepickerDate",
            "id": "class-DatepickerDate-a7ef97f2a6f101064903c6736c96625a",
            "file": "src/app/datepicker/models/DatepickerDate.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import * as dayjs from 'dayjs';\r\nimport {Dayjs, OpUnitType, ConfigType, OptionType} from \"dayjs\";\r\nimport {DatepickerTime} from \"./DatepickerTime\";\r\n\r\nexport class DatepickerDate {\r\n  private _date: Dayjs;\r\n\r\n  public getYear(): number {\r\n    return this._date.year();\r\n  }\r\n\r\n  public setYear(v: number): DatepickerDate {\r\n    return new DatepickerDate(this._date.year(v));\r\n  }\r\n\r\n  public getMonth(): number {\r\n    return this._date.month();\r\n  }\r\n\r\n  public setMonth(v: number): DatepickerDate {\r\n    return new DatepickerDate(this._date.month(v));\r\n  }\r\n\r\n  public getDate(): number {\r\n    return this._date.date();\r\n  }\r\n\r\n  public setDate(v: number): DatepickerDate {\r\n    return new DatepickerDate(this._date.date(v));\r\n  }\r\n\r\n  public getDay(): number {\r\n    return this._date.weekday();\r\n  }\r\n\r\n  public setDay(v: number): DatepickerDate {\r\n    return new DatepickerDate(this._date.weekday(v));\r\n  }\r\n\r\n  public setTime(time: DatepickerTime): DatepickerDate {\r\n    return new DatepickerDate(\r\n      this._date\r\n        .hour(time.getHours())\r\n        .minute(time.getMinutes())\r\n        .second(time.getSeconds())\r\n    )\r\n  }\r\n\r\n  public getTime(): DatepickerTime {\r\n    return new DatepickerTime(\r\n      this._date.hour(),\r\n      this._date.minute(),\r\n      this._date.second()\r\n    )\r\n  }\r\n\r\n  public isSame(date: Date, unit: OpUnitType) {\r\n    return this._date.isSame(date, unit);\r\n  }\r\n\r\n  public getDaysInMonth(): number {\r\n    return this._date.daysInMonth();\r\n  }\r\n\r\n  public getISOString(): string {\r\n    return this._date.toISOString();\r\n  }\r\n\r\n  public getJSDate(): Date {\r\n    return this._date.toDate();\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this._date.isValid();\r\n  }\r\n\r\n  constructor(config?: ConfigType, format?: OptionType, strict?: boolean) {\r\n    this._date = dayjs(config, format, strict);\r\n  }\r\n\r\n  public static getFormat(jsFormat: string): string {\r\n    return jsFormat.replace(/[dyh]/g, s => s.toUpperCase());\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "ConfigType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "format",
                        "type": "OptionType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "strict",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 75,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "ConfigType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "format",
                        "type": "OptionType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "strict",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dayjs",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getDate",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getDay",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getDaysInMonth",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getFormat",
                    "args": [
                        {
                            "name": "jsFormat",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "jsFormat",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getISOString",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getJSDate",
                    "args": [],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getMonth",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getTime",
                    "args": [],
                    "optional": false,
                    "returnType": "DatepickerTime",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getYear",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "isSame",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "unit",
                            "type": "OpUnitType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "unit",
                            "type": "OpUnitType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isValid",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "setDate",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DatepickerDate",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDay",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DatepickerDate",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMonth",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DatepickerDate",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTime",
                    "args": [
                        {
                            "name": "time",
                            "type": "DatepickerTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DatepickerDate",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "time",
                            "type": "DatepickerTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setYear",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DatepickerDate",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DatepickerOverlayRef",
            "id": "class-DatepickerOverlayRef-286b4d67b6c5af866107579bcb2828fd",
            "file": "src/app/datepicker/models/DatepickerOverlayRef.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {OverlayRef} from \"@angular/cdk/overlay\";\r\n\r\nexport class DatepickerOverlayRef {\r\n  constructor(\r\n    private overlayRef: OverlayRef\r\n  ) {}\r\n\r\n  close() {\r\n    this.overlayRef.dispose();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "overlayRef",
                        "type": "OverlayRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "overlayRef",
                        "type": "OverlayRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DatepickerTime",
            "id": "class-DatepickerTime-673f5e9fade7b1ef984126b284f06ace",
            "file": "src/app/datepicker/models/DatepickerTime.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DatepickerTime {\r\n  private _hours: number;\r\n\r\n  private _minutes: number;\r\n\r\n  private _seconds: number;\r\n\r\n  constructor(hours: number = 0, minutes: number = 0, seconds: number = 0) {\r\n    this._hours = hours;\r\n    this._minutes = minutes;\r\n    this._seconds = seconds;\r\n  }\r\n\r\n  public getHours(): number {\r\n    return this._hours;\r\n  }\r\n  public setHours(v: number): void {\r\n    this._hours = v;\r\n  }\r\n\r\n  public getMinutes(): number {\r\n    return this._minutes;\r\n  }\r\n  public setMinutes(v: number): void {\r\n    this._minutes = v;\r\n  }\r\n\r\n  public getSeconds(): number {\r\n    return this._seconds;\r\n  }\r\n  public setSeconds(v: number): void {\r\n    this._seconds = v;\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "hours",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0"
                    },
                    {
                        "name": "minutes",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0"
                    },
                    {
                        "name": "seconds",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "hours",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "minutes",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "seconds",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_hours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_minutes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_seconds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getHours",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getMinutes",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getSeconds",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "setHours",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMinutes",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSeconds",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-336b6f07f8186512b5e205220c1425da",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ElementRef, ViewChild} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 300px;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app\">\r\n  <app-datepicker-input></app-datepicker-input>\r\n</div>\r\n"
        },
        {
            "name": "DatepickerInputComponent",
            "id": "component-DatepickerInputComponent-886d0ead0c2768e87a3ca5a92753b78a",
            "file": "src/app/datepicker/components/datepicker-input/datepicker-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatepickerInputComponent), multi: true\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: DatepickerConfigToken, useFactory: (injector: Injector) => {\n        const localeConfig: Required<IDatepickerLocale> = injector.get(DatepickerLocale);\n        return new DatepickerConfig({\n            dateFormat: localeConfig.dateFormat\n        });\n    }, deps: [Injector]\n}",
                    "ns": "{\n    provide: DatepickerConfigToken, useFactory: (injector: Injector) => {\n        const localeConfig: Required<IDatepickerLocale> = injector"
                },
                {
                    "name": "DatepickerService"
                },
                {
                    "name": "DestroyService"
                }
            ],
            "selector": "app-datepicker-input",
            "styleUrls": [
                "./datepicker-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "allowTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string"
                },
                {
                    "name": "timeFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onOpened",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "btn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'btn', {read: ElementRef}"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatepickerConfig",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "DatepickerConfigToken"
                        }
                    ],
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "datepicker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'datepicker', {read: ElementRef}"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "inputValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "layoutRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatepickerOverlayRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 127
                }
            ],
            "methodsClass": [
                {
                    "name": "initDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "modelChangeHandler",
                    "args": [
                        {
                            "name": "nextModelValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "nextModelValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openPicker",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "subscribeToSelectedDateChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef, EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit, Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { DatepickerConfigToken, DatepickerOverlayService } from \"../../services/datepicker-overlay.service\";\r\nimport {DatepickerService} from \"../../services/datepicker.service\";\r\nimport {DatepickerOverlayRef} from \"../../models/DatepickerOverlayRef\";\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\r\nimport {DestroyService} from \"../../../shared/services/destroy.service\";\r\nimport {takeUntil} from \"rxjs/operators\";\r\nimport {DatepickerDate} from \"../../models/DatepickerDate\";\r\nimport { DatepickerConfig } from \"../../models/DatepickerConfig\";\r\nimport { DatepickerLocale } from \"../../injection-tokens/DatepickerLocale\";\r\nimport { IDatepickerLocale } from \"../../models/IDatepickerLocale\";\r\nimport { getMaskFormat } from \"../../utils/getMaskFormat\";\r\n\r\n@Component({\r\n  selector: 'app-datepicker-input',\r\n  templateUrl: './datepicker-input.component.html',\r\n  styleUrls: ['./datepicker-input.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => DatepickerInputComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: DatepickerConfigToken,\r\n      useFactory: (injector: Injector) => {\r\n        const localeConfig: Required<IDatepickerLocale> = injector.get(DatepickerLocale);\r\n        return new DatepickerConfig({\r\n          dateFormat: localeConfig.dateFormat\r\n        })\r\n      },\r\n      deps: [Injector]\r\n    },\r\n    DatepickerService,\r\n    DestroyService\r\n  ]\r\n})\r\nexport class DatepickerInputComponent implements OnInit, AfterViewInit, ControlValueAccessor {\r\n  @Input()\r\n  set allowTime(v: boolean) {\r\n    this.config.allowTime = v;\r\n  }\r\n\r\n  @Input()\r\n  set dateFormat(v: string) {\r\n    this.config.dateFormat = v;\r\n  }\r\n\r\n  @Input()\r\n  set timeFormat(v: string) {\r\n    this.config.timeFormat = v;\r\n  }\r\n\r\n  @Output()\r\n  onOpened = new EventEmitter<any>();\r\n\r\n  get dateFormat(): string {\r\n    if (!this.config.allowTime) { return this.config.dateFormat }\r\n    return `${this.config.dateFormat} ${this.config.timeFormat}`;\r\n  }\r\n\r\n  get maskFormat(): string {\r\n    return getMaskFormat(this.dateFormat);\r\n  }\r\n\r\n  @ViewChild('datepicker', {read: ElementRef}) private datepicker!: ElementRef;\r\n\r\n  @ViewChild('btn', {read: ElementRef}) private btn!: ElementRef;\r\n\r\n  public inputValue: Date | null = null;\r\n\r\n  private layoutRef: DatepickerOverlayRef | undefined;\r\n\r\n  constructor(\r\n    private datepickerOverlayService: DatepickerOverlayService,\r\n    private datepickerService: DatepickerService,\r\n    private destroy$: DestroyService,\r\n    @Inject(DatepickerConfigToken) public config: DatepickerConfig\r\n  ) {}\r\n  public openPicker(): void {\r\n    this.layoutRef = this.datepickerOverlayService.open(\r\n      this.datepicker,\r\n      this.datepickerService,\r\n      this.config\r\n    );\r\n    this.onOpened.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToSelectedDateChange();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.initDate());\r\n  }\r\n\r\n  private subscribeToSelectedDateChange(): void {\r\n    this.datepickerService.selectedDate$.pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(date => {\r\n      if (date) {\r\n        this.value = date.getJSDate();\r\n        this.layoutRef?.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  private initDate(): void {\r\n    if (this.inputValue) {\r\n      this.datepickerService.setSelectedDate(this.inputValue);\r\n      this.datepickerService.setCurrentSelectedDate(this.inputValue);\r\n    }\r\n  }\r\n\r\n  // ControlValueAccessor implementation\r\n  onChange: any = () => {}\r\n  onTouch: any = () => {}\r\n\r\n  set value(val: Date | null) {\r\n    this.inputValue = val;\r\n    this.onChange(val);\r\n    this.onTouch();\r\n  }\r\n\r\n  get value(): Date | null {\r\n    return this.inputValue;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  writeValue(obj: Date | null): void {\r\n    this.value = obj;\r\n  }\r\n\r\n  modelChangeHandler(nextModelValue: string): void {\r\n    // todo to optimize\r\n    const date = new DatepickerDate(nextModelValue, DatepickerDate.getFormat(this.dateFormat), true);\r\n    if (date.isValid()) {\r\n      this.value = date.getJSDate();\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".datepicker {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 32px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 3px;\r\n  padding: 4px 11px;\r\n  &:hover {\r\n    border-color: #bcbcbc;\r\n  }\r\n  &__input {\r\n    all: unset;\r\n    width: 100%;\r\n  }\r\n  &__btn {\r\n    all: unset;\r\n    margin-left: 8px;\r\n    cursor: pointer;\r\n  }\r\n  &__icon {\r\n    color: #bcbcbc;\r\n    font-size: 14px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./datepicker-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "datepickerOverlayService",
                        "type": "DatepickerOverlayService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "destroy$",
                        "type": "DestroyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "DatepickerConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 82,
                "jsdoctags": [
                    {
                        "name": "datepickerOverlayService",
                        "type": "DatepickerOverlayService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "destroy$",
                        "type": "DestroyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "DatepickerConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "allowTime": {
                    "name": "allowTime",
                    "setSignature": {
                        "name": "allowTime",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "dateFormat": {
                    "name": "dateFormat",
                    "setSignature": {
                        "name": "dateFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 55,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dateFormat",
                        "type": "string",
                        "returnType": "string",
                        "line": 67
                    }
                },
                "timeFormat": {
                    "name": "timeFormat",
                    "setSignature": {
                        "name": "timeFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 60,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "maskFormat": {
                    "name": "maskFormat",
                    "getSignature": {
                        "name": "maskFormat",
                        "type": "string",
                        "returnType": "string",
                        "line": 72
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "Date | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 129,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "Date | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "Date | null",
                        "line": 135
                    }
                }
            },
            "templateData": "<div class=\"datepicker\" #datepicker>\r\n  <input type=\"text\" class=\"datepicker__input\" (blur)=\"onTouch($event)\"\r\n     [ngModel]=\"value | date: dateFormat\"\r\n     (ngModelChange)=\"modelChangeHandler($event)\"\r\n     [mask]=\"maskFormat\"\r\n     [dropSpecialCharacters]=\"false\"\r\n  />\r\n  <button class=\"datepicker__btn\" #btn (click)=\"openPicker()\">\r\n    <span class=\"datepicker__icon\">\r\n      <app-svg-icon name=\"calendar\"></app-svg-icon>\r\n    </span>\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "DatepickerMonthComponent",
            "id": "component-DatepickerMonthComponent-bd5b459dc294771a2f471a354ce91514",
            "file": "src/app/datepicker/components/datepicker-month/datepicker-month.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DestroyService"
                }
            ],
            "selector": "app-datepicker-month",
            "styleUrls": [
                "./datepicker-month.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker-month.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "changeMonth",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "changeYear",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "monthClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "selectDay",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "yearClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentSelectedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatepickerDate",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "days",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[][]",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "selectedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatepickerDate | null",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isCurrentDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "DatepickerDate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DatepickerDate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelectedDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "DatepickerDate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DatepickerDate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nextMonth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "nextYear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prevMonth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "prevYear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "selectMonthDay",
                    "args": [
                        {
                            "name": "date",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "subscribeToDateChanged",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\r\nimport {DatepickerService} from \"../../services/datepicker.service\";\r\nimport {DatepickerDate} from \"../../models/DatepickerDate\";\r\nimport {takeUntil} from \"rxjs/operators\";\r\nimport {DestroyService} from \"../../../shared/services/destroy.service\";\r\nimport {DatepickerLocale} from \"../../injection-tokens/DatepickerLocale\";\r\nimport {IDatepickerLocale} from \"../../models/IDatepickerLocale\";\r\n\r\n@Component({\r\n  selector: 'app-datepicker-month',\r\n  templateUrl: './datepicker-month.component.html',\r\n  styleUrls: ['./datepicker-month.component.scss'],\r\n  providers: [DestroyService]\r\n})\r\nexport class DatepickerMonthComponent implements OnInit {\r\n  @Output()\r\n  changeMonth: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  @Output()\r\n  changeYear: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  @Output()\r\n  monthClick: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output()\r\n  yearClick: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output()\r\n  selectDay: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  public get weekDaysMin(): string[] | undefined {\r\n    return this.localeConfig.weekDaysMin;\r\n  }\r\n\r\n  public get months(): string[] | undefined {\r\n    return this.localeConfig.months\r\n  }\r\n\r\n  public days: (DatepickerDate | null)[][] = [];\r\n\r\n  public selectedDate!: DatepickerDate | null;\r\n\r\n  public currentSelectedDate!: DatepickerDate;\r\n\r\n  get month(): string | undefined {\r\n    if (this.currentSelectedDate) {\r\n      return this.months && this.months[this.currentSelectedDate.getMonth()];\r\n    }\r\n    return;\r\n  }\r\n\r\n  get year(): number {\r\n    return this.currentSelectedDate.getYear();\r\n  }\r\n\r\n  constructor(\r\n    private datepickerService: DatepickerService,\r\n    private destroy$: DestroyService,\r\n    @Inject(DatepickerLocale) private localeConfig: IDatepickerLocale\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToDateChanged();\r\n  }\r\n\r\n  public isCurrentDate(date: DatepickerDate): boolean {\r\n    if (!date) return false;\r\n    const currentDate = this.datepickerService.currentDate;\r\n    return date.isSame(currentDate.getJSDate(), 'day');\r\n  }\r\n\r\n  public isSelectedDate(date: DatepickerDate): boolean {\r\n    if (!date || !this.selectedDate) return false;\r\n    return date.isSame(this.selectedDate.getJSDate(), 'day');\r\n  }\r\n\r\n  private subscribeToDateChanged(): void {\r\n    this.datepickerService.currentSelectedDate$.pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe((selectedDate) => {\r\n      this.currentSelectedDate = selectedDate;\r\n      this.days = this.datepickerService.getMonthDates(selectedDate.getJSDate());\r\n    });\r\n\r\n    this.datepickerService.selectedDate$.pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(selectedDate => {\r\n      this.selectedDate = selectedDate;\r\n    })\r\n  }\r\n\r\n  public nextMonth(): void {\r\n    this.changeMonth.emit(this.currentSelectedDate.getMonth() + 1);\r\n  }\r\n\r\n  public prevMonth(): void {\r\n    this.changeMonth.emit(this.currentSelectedDate.getMonth() - 1);\r\n  }\r\n\r\n  public nextYear(): void {\r\n    this.changeYear.emit(this.currentSelectedDate.getYear() + 1);\r\n  }\r\n\r\n  public prevYear(): void {\r\n    this.changeYear.emit(this.currentSelectedDate.getYear() - 1);\r\n  }\r\n\r\n  public selectMonthDay(date: number): void {\r\n    this.selectDay.emit(date);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn {\r\n  all: unset;\r\n}\r\n.datepicker-month {\r\n  &-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 8px;\r\n    border-bottom: 1px solid #ddd;\r\n    &__arrow {\r\n      margin: 0 3px;\r\n    }\r\n  }\r\n  &-main {\r\n    padding: 12px;\r\n  }\r\n  &-table {\r\n    &__row {\r\n      display: flex;\r\n    }\r\n    &__cell {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 36px;\r\n      height: 30px;\r\n      font-weight: normal;\r\n      &_day {\r\n        cursor: pointer;\r\n        border-radius: 3px;\r\n        &:hover:not(&_selected) {\r\n          background-color: #efefef;\r\n        }\r\n        &_current {\r\n          border: 1px solid blue;\r\n        }\r\n        &_selected {\r\n          cursor: default;\r\n          background-color: lightskyblue;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./datepicker-month.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "destroy$",
                        "type": "DestroyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localeConfig",
                        "type": "IDatepickerLocale",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "destroy$",
                        "type": "DestroyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localeConfig",
                        "type": "IDatepickerLocale",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "weekDaysMin": {
                    "name": "weekDaysMin",
                    "getSignature": {
                        "name": "weekDaysMin",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 31
                    }
                },
                "months": {
                    "name": "months",
                    "getSignature": {
                        "name": "months",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 35
                    }
                },
                "month": {
                    "name": "month",
                    "getSignature": {
                        "name": "month",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 45
                    }
                },
                "year": {
                    "name": "year",
                    "getSignature": {
                        "name": "year",
                        "type": "number",
                        "returnType": "number",
                        "line": 52
                    }
                }
            },
            "templateData": "<div class=\"datepicker-month\">\r\n  <div class=\"datepicker-month-header\">\r\n    <div>\r\n      <button class=\"btn datepicker-month-header__arrow\" (click)=\"prevYear()\">\r\n        <<\r\n      </button>\r\n      <button class=\"btn datepicker-month-header__arrow\" (click)=\"prevMonth()\">\r\n        <\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <div>\r\n        <span (click)=\"monthClick.emit()\">\r\n          {{month}}\r\n        </span>\r\n        <span>, </span>\r\n        <span (click)=\"yearClick.emit()\">\r\n          {{year}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button class=\"btn datepicker-month-header__arrow\" (click)=\"nextMonth()\">\r\n        >\r\n      </button>\r\n      <button class=\"btn datepicker-month-header__arrow\" (click)=\"nextYear()\">\r\n        >>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"datepicker-month-main\">\r\n    <table class=\"datepicker-month-table\">\r\n      <thead>\r\n      <tr class=\"datepicker-month-table__row\">\r\n        <th\r\n          class=\"datepicker-month-table__cell\"\r\n          *ngFor=\"let item of weekDaysMin\"\r\n        >\r\n          {{item}}\r\n        </th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr\r\n        class=\"datepicker-month-table__row\"\r\n        *ngFor=\"let weekMas of days\"\r\n      >\r\n        <td\r\n          class=\"datepicker-month-table__cell\"\r\n          [class.datepicker-month-table__cell_day]=\"!!date\"\r\n          [class.datepicker-month-table__cell_day_current]=\"isCurrentDate(date!)\"\r\n          [class.datepicker-month-table__cell_day_selected]=\"isSelectedDate(date!)\"\r\n          *ngFor=\"let date of weekMas\"\r\n          (click)=\"!!date && selectMonthDay(date.getDate())\"\r\n        >\r\n          {{date?.getDate()}}\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DatepickerMonthsComponent",
            "id": "component-DatepickerMonthsComponent-06bfeacbd2eac3a61b256f0e2d366b0b",
            "file": "src/app/datepicker/components/datepicker-months/datepicker-months.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-datepicker-months",
            "styleUrls": [
                "./datepicker-months.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker-months.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "monthSelected",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectMonth",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\r\nimport {DatepickerLocale} from \"../../injection-tokens/DatepickerLocale\";\r\nimport {IDatepickerLocale} from \"../../models/IDatepickerLocale\";\r\n\r\n@Component({\r\n  selector: 'app-datepicker-months',\r\n  templateUrl: './datepicker-months.component.html',\r\n  styleUrls: ['./datepicker-months.component.scss']\r\n})\r\nexport class DatepickerMonthsComponent implements OnInit {\r\n  @Output()\r\n  monthSelected: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  public get months(): string[] | undefined {\r\n    return this.localeConfig.months;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(DatepickerLocale) private localeConfig: IDatepickerLocale\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public selectMonth(month: number): void {\r\n    this.monthSelected.emit(month);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".datepicker-months {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  &__item {\r\n    display: flex;\r\n    padding: 6px 8px;\r\n    margin: 6px 10px;\r\n    border-radius: 3px;\r\n    &:hover {\r\n      cursor: pointer;\r\n      background-color: #efefef;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./datepicker-months.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "localeConfig",
                        "type": "IDatepickerLocale",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "localeConfig",
                        "type": "IDatepickerLocale",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "months": {
                    "name": "months",
                    "getSignature": {
                        "name": "months",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 14
                    }
                }
            },
            "templateData": "<div class=\"datepicker-months\">\r\n  <span\r\n    *ngFor=\"let month of months; let i = index\"\r\n    (click)=\"selectMonth(i)\"\r\n    class=\"datepicker-months__item\"\r\n  >\r\n    {{month}}\r\n  </span>\r\n</div>\r\n"
        },
        {
            "name": "DatepickerOverlayComponent",
            "id": "component-DatepickerOverlayComponent-121b4157d7977aef284f8b2e70b05815",
            "file": "src/app/datepicker/components/datepicker-overlay/datepicker-overlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-file-preview-overlay",
            "styleUrls": [
                "./datepicker-overlay.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker-overlay.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pickerType",
                    "defaultValue": "EPickerType.Days",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EPickerType",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "pickerTypes",
                    "defaultValue": "EPickerType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goToSelectDay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "goToSelectMonth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "goToSelectTime",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "goToSelectYear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectDayHandler",
                    "args": [
                        {
                            "name": "day",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "day",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMonthHandler",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectTimeHandler",
                    "args": [
                        {
                            "name": "time",
                            "type": "DatepickerTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "time",
                            "type": "DatepickerTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectYearHandler",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentSelectedDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentSelectedMonth",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentSelectedYear",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\r\nimport {DatepickerService} from \"../../services/datepicker.service\";\r\nimport {DatepickerTime} from \"../../models/DatepickerTime\";\r\nimport { DatepickerConfigToken } from \"../../services/datepicker-overlay.service\";\r\nimport { DatepickerConfig } from \"../../models/DatepickerConfig\";\r\n\r\nenum EPickerType {\r\n  Years,\r\n  Months,\r\n  Days,\r\n  Time\r\n}\r\n\r\n@Component({\r\n  selector: 'app-file-preview-overlay',\r\n  templateUrl: './datepicker-overlay.component.html',\r\n  styleUrls: ['./datepicker-overlay.component.scss']\r\n})\r\nexport class DatepickerOverlayComponent implements OnInit {\r\n  public pickerTypes = EPickerType;\r\n\r\n  public pickerType: EPickerType = EPickerType.Days;\r\n\r\n  constructor(\r\n    private datepickerService: DatepickerService,\r\n    @Inject(DatepickerConfigToken) private config: DatepickerConfig\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public selectDayHandler(day: number): void {\r\n    if (this.config.allowTime) {\r\n      this.setCurrentSelectedDate(day);\r\n      this.goToSelectTime();\r\n    } else {\r\n      this.datepickerService.setSelectedDate(\r\n        this.datepickerService.currentSelectedDate.setDate(day).getJSDate()\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  public selectYearHandler(year: number): void {\r\n    this.setCurrentSelectedYear(year);\r\n    this.goToSelectMonth();\r\n  }\r\n\r\n  public selectMonthHandler(month: number): void {\r\n    this.setCurrentSelectedMonth(month);\r\n    this.goToSelectDay();\r\n  }\r\n\r\n  public setCurrentSelectedYear(year: number): void {\r\n    this.datepickerService.setCurrentSelectedDate(\r\n      this.datepickerService.currentSelectedDate.setYear(year).getJSDate()\r\n    );\r\n  }\r\n\r\n  public setCurrentSelectedMonth(month: number): void {\r\n    this.datepickerService.setCurrentSelectedDate(\r\n      this.datepickerService.currentSelectedDate.setMonth(month).getJSDate()\r\n    );\r\n  }\r\n\r\n  public setCurrentSelectedDate(date: number): void {\r\n    this.datepickerService.setCurrentSelectedDate(\r\n      this.datepickerService.currentSelectedDate.setDate(date).getJSDate()\r\n    )\r\n  }\r\n\r\n  public selectTimeHandler(time: DatepickerTime): void {\r\n    this.datepickerService.setSelectedDate(\r\n      this.datepickerService.currentSelectedDate.setTime(time).getJSDate()\r\n    )\r\n  }\r\n\r\n  public goToSelectTime(): void {\r\n    this.pickerType = EPickerType.Time;\r\n  }\r\n\r\n  public goToSelectDay(): void {\r\n    this.pickerType = EPickerType.Days;\r\n  }\r\n\r\n  public goToSelectMonth(): void {\r\n    this.pickerType = EPickerType.Months;\r\n  }\r\n\r\n  public goToSelectYear(): void {\r\n    this.pickerType = EPickerType.Years;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".datepicker-overlay {\r\n  width: 280px;\r\n  height: 275px;\r\n  box-shadow: 0 2px 6px 0 rgba(34, 60, 80, 0.2);\r\n  border-radius: 6px;\r\n  background-color: white;\r\n}\r\n",
                    "styleUrl": "./datepicker-overlay.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "DatepickerConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "DatepickerConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"datepicker-overlay\">\r\n  <ng-container [ngSwitch]=\"pickerType\">\r\n    <ng-template [ngSwitchCase]=\"pickerTypes.Time\">\r\n      <app-datepicker-time\r\n        (selectTime)=\"selectTimeHandler($event)\"\r\n      ></app-datepicker-time>\r\n    </ng-template>\r\n    <ng-template [ngSwitchCase]=\"pickerTypes.Days\">\r\n      <app-datepicker-month\r\n        (changeMonth)=\"setCurrentSelectedMonth($event)\"\r\n        (changeYear)=\"setCurrentSelectedYear($event)\"\r\n        (monthClick)=\"goToSelectMonth()\"\r\n        (yearClick)=\"goToSelectYear()\"\r\n        (selectDay)=\"selectDayHandler($event)\"\r\n      ></app-datepicker-month>\r\n    </ng-template>\r\n    <ng-template [ngSwitchCase]=\"pickerTypes.Months\">\r\n      <app-datepicker-months\r\n        (monthSelected)=\"selectMonthHandler($event)\"\r\n      ></app-datepicker-months>\r\n    </ng-template>\r\n    <ng-template [ngSwitchCase]=\"pickerTypes.Years\">\r\n      <app-datepicker-years\r\n        (yearSelected)=\"selectYearHandler($event)\"\r\n      ></app-datepicker-years>\r\n    </ng-template>\r\n  </ng-container>\r\n</div>\r\n"
        },
        {
            "name": "DatepickerTimeComponent",
            "id": "component-DatepickerTimeComponent-7a1d703f0e4aa54891f22bd0140a9141",
            "file": "src/app/datepicker/components/datepicker-time/datepicker-time.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DestroyService"
                }
            ],
            "selector": "app-datepicker-time",
            "styleUrls": [
                "./datepicker-time.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker-time.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "selectTime",
                    "defaultValue": "new EventEmitter<DatepickerTime>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<DatepickerTime>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "hours",
                    "defaultValue": "new Array(24).fill(0).map((v, i) => i)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "minutes",
                    "defaultValue": "new Array(60).fill(0).map((v, i) => i)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "seconds",
                    "defaultValue": "new Array(60).fill(0).map((v, i) => i)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "selectedTime",
                    "defaultValue": "new DatepickerTime()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatepickerTime",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setHours",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMinutes",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSeconds",
                    "args": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "v",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTime",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "subscribeToDateChanged",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {DatepickerTime} from \"../../models/DatepickerTime\";\r\nimport {DatepickerDateService} from \"../../services/datepicker-date.service\";\r\nimport {DatepickerService} from \"../../services/datepicker.service\";\r\nimport {map, takeUntil} from \"rxjs/operators\";\r\nimport {DestroyService} from \"../../../shared/services/destroy.service\";\r\n\r\n@Component({\r\n  selector: 'app-datepicker-time',\r\n  templateUrl: './datepicker-time.component.html',\r\n  styleUrls: ['./datepicker-time.component.scss'],\r\n  providers: [DestroyService]\r\n})\r\nexport class DatepickerTimeComponent implements OnInit {\r\n  @Output()\r\n  private selectTime: EventEmitter<DatepickerTime> = new EventEmitter<DatepickerTime>();\r\n\r\n  public selectedTime: DatepickerTime = new DatepickerTime();\r\n\r\n  public hours: number[] = new Array(24).fill(0).map((v, i) => i);\r\n\r\n  public minutes: number[] = new Array(60).fill(0).map((v, i) => i);\r\n\r\n  public seconds: number[] = new Array(60).fill(0).map((v, i) => i);\r\n\r\n  constructor(\r\n    private datepickerService: DatepickerService,\r\n    private destroy$: DestroyService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToDateChanged();\r\n  }\r\n\r\n  private subscribeToDateChanged(): void {\r\n    this.datepickerService.currentSelectedDate$.pipe(\r\n      map(date => date.getTime()),\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(time => {\r\n      this.selectedTime = time;\r\n    })\r\n  }\r\n\r\n  public setHours(v: number): void {\r\n    this.selectedTime.setHours(v);\r\n  }\r\n\r\n  public setMinutes(v: number): void {\r\n    this.selectedTime.setMinutes(v);\r\n  }\r\n\r\n  public setSeconds(v: number): void {\r\n    this.selectedTime.setSeconds(v);\r\n  }\r\n\r\n  public setTime(): void {\r\n    this.selectTime.emit(this.selectedTime);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn {\r\n  all: unset;\r\n}\r\n.datepicker-time {\r\n  max-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  &-header {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 8px;\r\n  }\r\n  &-main {\r\n    display: flex;\r\n    flex: 1 1 100%;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n  }\r\n  &-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding: 8px;\r\n  }\r\n  &__col {\r\n    width: 55px;\r\n    overflow-y: auto;\r\n  }\r\n  &__item {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 3px 4px;\r\n    &:hover:not(&_current-selected) {\r\n      cursor: pointer;\r\n      background-color: #efefef;\r\n    }\r\n    &_current-selected {\r\n      background-color: lightskyblue;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./datepicker-time.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "destroy$",
                        "type": "DestroyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "destroy$",
                        "type": "DestroyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"datepicker-time\">\r\n  <div class=\"datepicker-time-header\">\r\n    <span>\r\n      {{ selectedTime.getHours() | number:'2.0-0' }}:\r\n      {{ selectedTime.getMinutes()  | number:'2.0-0' }}:\r\n      {{ selectedTime.getSeconds()  | number:'2.0-0'}}\r\n    </span>\r\n  </div>\r\n  <div class=\"datepicker-time-main\">\r\n    <ul class=\"datepicker-time__col\">\r\n      <li\r\n        class=\"datepicker-time__item\"\r\n        [class.datepicker-time__item_current-selected]=\"item === selectedTime.getHours()\"\r\n        *ngFor=\"let item of hours\"\r\n        (click)=\"setHours(item)\"\r\n      >{{item}}</li>\r\n    </ul>\r\n    <ul class=\"datepicker-time__col\">\r\n      <li\r\n        class=\"datepicker-time__item\"\r\n        [class.datepicker-time__item_current-selected]=\"item === selectedTime.getMinutes()\"\r\n        *ngFor=\"let item of minutes\"\r\n        (click)=\"setMinutes(item)\"\r\n      >{{item}}</li>\r\n    </ul>\r\n    <ul class=\"datepicker-time__col\">\r\n      <li\r\n        class=\"datepicker-time__item\"\r\n        [class.datepicker-time__item_current-selected]=\"item === selectedTime.getSeconds()\"\r\n        *ngFor=\"let item of seconds\"\r\n        (click)=\"setSeconds(item)\"\r\n      >{{item}}</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"datepicker-time-footer\">\r\n    <button\r\n      class=\"btn\"\r\n      (click)=\"setTime()\"\r\n    >ОК</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DatepickerYearsComponent",
            "id": "component-DatepickerYearsComponent-0248fd92a66c00e84ff0af0572f06448",
            "file": "src/app/datepicker/components/datepicker-years/datepicker-years.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-datepicker-years",
            "styleUrls": [
                "./datepicker-years.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker-years.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "yearSelected",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentYearOffset",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "years",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectYear",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateYears",
                    "args": [
                        {
                            "name": "offSetDirection",
                            "type": " | \"1\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "offSetDirection",
                            "type": " | \"1\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {DatepickerService} from \"../../services/datepicker.service\";\r\n\r\n@Component({\r\n  selector: 'app-datepicker-years',\r\n  templateUrl: './datepicker-years.component.html',\r\n  styleUrls: ['./datepicker-years.component.scss']\r\n})\r\nexport class DatepickerYearsComponent implements OnInit {\r\n  @Output()\r\n  yearSelected: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  private currentYearOffset: number = 0;\r\n\r\n  public years: number[] = [];\r\n\r\n  constructor(\r\n    private datepickerService: DatepickerService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.years = this.datepickerService.getYears();\r\n  }\r\n\r\n  public updateYears(offSetDirection: -1 | 1): void {\r\n    this.currentYearOffset += offSetDirection;\r\n    this.years = this.datepickerService.getYears(this.currentYearOffset);\r\n  }\r\n\r\n  public selectYear(year: number): void {\r\n    this.yearSelected.emit(year);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn {\r\n  all: unset;\r\n}\r\n.datepicker-years {\r\n  height: 100%;\r\n  &-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 8px;\r\n    border-bottom: 1px solid #ddd;\r\n    &__arrow {\r\n      margin: 0 3px;\r\n    }\r\n  }\r\n  &-main {\r\n    padding: 12px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  &__item {\r\n    display: flex;\r\n    padding: 6px 8px;\r\n    margin: 6px 10px;\r\n    border-radius: 3px;\r\n    &:hover {\r\n      cursor: pointer;\r\n      background-color: #efefef;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./datepicker-years.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "datepickerService",
                        "type": "DatepickerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"datepicker-years\">\r\n  <div class=\"datepicker-years-header\">\r\n    <div>\r\n      <button class=\"btn datepicker-years-header__arrow\" (click)=\"updateYears(-1)\">\r\n        <<\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <div>\r\n        <span *ngIf=\"years && years.length > 0\">\r\n          {{years[0]}} - {{years[years.length - 1]}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button\r\n        class=\"btn datepicker-years-header__arrow\"\r\n        (click)=\"updateYears(1)\"\r\n      >\r\n        >>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"datepicker-years-main\">\r\n    <span\r\n      *ngFor=\"let item of years\"\r\n      class=\"datepicker-years__item\"\r\n      (click)=\"selectYear(item)\"\r\n    >{{item}}</span>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SvgIconComponent",
            "id": "component-SvgIconComponent-31dfb4f9bff76abedae828b9ad2edec8",
            "file": "src/app/svg-icons/components/svg-icon/svg-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-svg-icon",
            "styleUrls": [
                "./svg-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./svg-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string | undefined"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-svg-icon',\r\n  templateUrl: './svg-icon.component.html',\r\n  styleUrls: ['./svg-icon.component.scss']\r\n})\r\nexport class SvgIconComponent implements OnInit {\r\n  @Input()\r\n  name: string | undefined;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    if (!this.name) { throw new Error('Svg name is empty'); }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "svg-icon {\r\n  display: flex;\r\n}\r\n",
                    "styleUrl": "./svg-icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<svg-icon [name]=\"name\"></svg-icon>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-4f6626c898cc2c92c33e357599bb8e6d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { DatepickerModule } from \"./datepicker/datepicker.module\";\r\nimport { AppComponent } from './app.component';\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    DatepickerModule.forRoot()\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DatepickerModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DatepickerModule",
            "id": "module-DatepickerModule-4891b2ddccf03780dabafc1928a35895",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/datepicker/datepicker.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [
                        {
                            "name": "locale",
                            "type": "IDatepickerLocale",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ModuleWithProviders<DatepickerModule>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "locale",
                            "type": "IDatepickerLocale",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import {InjectionToken, ModuleWithProviders, NgModule} from '@angular/core';\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { DatepickerOverlayComponent } from \"./components/datepicker-overlay/datepicker-overlay.component\";\r\nimport { DatepickerInputComponent } from './components/datepicker-input/datepicker-input.component';\r\nimport { DatepickerMonthComponent } from './components/datepicker-month/datepicker-month.component';\r\nimport {DatepickerOverlayService} from \"./services/datepicker-overlay.service\";\r\nimport { DatepickerMonthsComponent } from './components/datepicker-months/datepicker-months.component';\r\nimport { DatepickerYearsComponent } from './components/datepicker-years/datepicker-years.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {DatepickerDateService} from \"./services/datepicker-date.service\";\r\nimport {SharedModule} from \"../shared/shared.module\";\r\nimport { NgxMaskModule } from 'ngx-mask'\r\nimport {SvgIconsModule} from \"../svg-icons/svg-icons.module\";\r\nimport {IDatepickerLocaleConfig} from \"./models/IDatepickerLocaleConfig\";\r\nimport {IDatepickerLocale} from \"./models/IDatepickerLocale\";\r\nimport {locales} from \"./configs/locales\";\r\nimport {TDatepickerWeekStart} from \"./models/TDatepickerWeekStart\";\r\nimport { DatepickerTimeComponent } from './components/datepicker-time/datepicker-time.component';\r\nimport { DatepickerLocale } from \"./injection-tokens/DatepickerLocale\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DatepickerOverlayComponent,\r\n    DatepickerInputComponent,\r\n    DatepickerMonthComponent,\r\n    DatepickerMonthsComponent,\r\n    DatepickerYearsComponent,\r\n    DatepickerTimeComponent\r\n  ],\r\n  imports: [\r\n    OverlayModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    NgxMaskModule.forRoot(),\r\n    SvgIconsModule\r\n  ],\r\n  exports: [\r\n    DatepickerInputComponent\r\n  ],\r\n  entryComponents: [\r\n    DatepickerOverlayComponent\r\n  ],\r\n  providers: [\r\n    DatepickerOverlayService,\r\n    DatepickerDateService\r\n  ]\r\n})\r\nexport class DatepickerModule {\r\n  public static forRoot(locale?: IDatepickerLocale): ModuleWithProviders<DatepickerModule> {\r\n    const DEFAULT_LOCALE = 'ru';\r\n    const config: Required<IDatepickerLocaleConfig> = locales[locale ? locale.name : DEFAULT_LOCALE];\r\n    if (!config) throw new Error(`Locale ${locale?.name} was not found`);\r\n    const datepickerLocale: Required<IDatepickerLocale> = {\r\n      name: DEFAULT_LOCALE,\r\n      ...config,\r\n    };\r\n    datepickerLocale.weekDaysMin = getWeekNamesByWeekStart(datepickerLocale.weekDaysMin, datepickerLocale.weekStart);\r\n    return {\r\n      ngModule: DatepickerModule,\r\n      providers: [\r\n        {\r\n          provide: DatepickerLocale,\r\n          useValue: datepickerLocale\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction getWeekNamesByWeekStart(weekNames: string[], weekStart: TDatepickerWeekStart): string[] {\r\n  if (weekStart === 0) return weekNames;\r\n  const [sunday, ...days] = weekNames;\r\n  return [...days, sunday];\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "DatepickerDateService"
                        },
                        {
                            "name": "DatepickerOverlayService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DatepickerInputComponent"
                        },
                        {
                            "name": "DatepickerMonthComponent"
                        },
                        {
                            "name": "DatepickerMonthsComponent"
                        },
                        {
                            "name": "DatepickerOverlayComponent"
                        },
                        {
                            "name": "DatepickerTimeComponent"
                        },
                        {
                            "name": "DatepickerYearsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SvgIconsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DatepickerInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-eb2f9910bc1b2f11855693433eaeb1b7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DestroyService } from \"./services/destroy.service\";\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    DestroyService\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "DestroyService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SvgIconsModule",
            "id": "module-SvgIconsModule-7e7f0d32dee5b188745604cde8a128c2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/svg-icons/svg-icons.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {AngularSvgIconModule} from \"angular-svg-icon\";\r\nimport {AngularSvgIconPreloaderModule} from \"angular-svg-icon-preloader\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { SvgIconComponent } from './components/svg-icon/svg-icon.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SvgIconComponent\r\n  ],\r\n  exports: [\r\n    SvgIconComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule, // fix no provider error\r\n    AngularSvgIconModule.forRoot(),\r\n    AngularSvgIconPreloaderModule.forRoot({\r\n      configUrl: './assets/icons.json',\r\n    }),\r\n  ]\r\n})\r\nexport class SvgIconsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SvgIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SvgIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Datepicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DatepickerConfigToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/services/datepicker-overlay.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<DatepickerConfig>('DatepickerConfig')"
            },
            {
                "name": "DatepickerLocale",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/injection-tokens/DatepickerLocale.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<Required<IDatepickerLocale>>('DatepickerLocale')"
            },
            {
                "name": "DatepickerTime",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultDatepickerConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/models/DatepickerConfig.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IPartialConfig",
                "defaultValue": "{\r\n  allowTime: false,\r\n  timeFormat: 'HH:mm:ss'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "getMaskFormat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/utils/getMaskFormat.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(dateFormat: string) => {\r\n  return dateFormat.replace(/[smhdy]/gi, '0');\r\n}"
            },
            {
                "name": "localeEn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/configs/locales/en.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Required<IDatepickerLocaleConfig>",
                "defaultValue": "{\r\n  weekStart: 0,\r\n  months: [\r\n    'January ', 'February ', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ],\r\n  weekDaysMin: [\r\n    'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'\r\n  ],\r\n  dateFormat: 'MM-dd-yyyy'\r\n}"
            },
            {
                "name": "localeRu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/configs/locales/ru.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Required<IDatepickerLocaleConfig>",
                "defaultValue": "{\r\n  weekStart: 1,\r\n  months: [\r\n    'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n    'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\r\n  ],\r\n  weekDaysMin: [\r\n    'Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'\r\n  ],\r\n  dateFormat: 'dd.MM.yyyy'\r\n}"
            },
            {
                "name": "locales",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/configs/locales/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, Required<IDatepickerLocaleConfig>>",
                "defaultValue": "{\r\n  ru: localeRu,\r\n  en: localeEn\r\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DatepickerInputComponent>",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    onOpened: action('opened')\r\n  }\r\n})"
            }
        ],
        "functions": [
            {
                "name": "getWeekNamesByWeekStart",
                "file": "src/app/datepicker/datepicker.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "weekNames",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "weekStart",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string[]",
                "jsdoctags": [
                    {
                        "name": "weekNames",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "weekStart",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "TConfig",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/datepicker/models/DatepickerConfig.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "TDatepickerWeekStart",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"0\" | \"1\"",
                "file": "src/app/datepicker/models/TDatepickerWeekStart.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [
            {
                "name": "EPickerType",
                "childs": [
                    {
                        "name": "Years",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Months",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Days",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "Time",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/datepicker/components/datepicker-overlay/datepicker-overlay.component.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts": [
                {
                    "name": "Datepicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DatepickerTime",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DatepickerInputComponent>",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    onOpened: action('opened')\r\n  }\r\n})"
                }
            ],
            "src/app/datepicker/services/datepicker-overlay.service.ts": [
                {
                    "name": "DatepickerConfigToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/services/datepicker-overlay.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<DatepickerConfig>('DatepickerConfig')"
                }
            ],
            "src/app/datepicker/injection-tokens/DatepickerLocale.ts": [
                {
                    "name": "DatepickerLocale",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/injection-tokens/DatepickerLocale.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<Required<IDatepickerLocale>>('DatepickerLocale')"
                }
            ],
            "src/app/datepicker/models/DatepickerConfig.ts": [
                {
                    "name": "defaultDatepickerConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/models/DatepickerConfig.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPartialConfig",
                    "defaultValue": "{\r\n  allowTime: false,\r\n  timeFormat: 'HH:mm:ss'\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/datepicker/utils/getMaskFormat.ts": [
                {
                    "name": "getMaskFormat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/utils/getMaskFormat.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(dateFormat: string) => {\r\n  return dateFormat.replace(/[smhdy]/gi, '0');\r\n}"
                }
            ],
            "src/app/datepicker/configs/locales/en.ts": [
                {
                    "name": "localeEn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/configs/locales/en.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Required<IDatepickerLocaleConfig>",
                    "defaultValue": "{\r\n  weekStart: 0,\r\n  months: [\r\n    'January ', 'February ', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ],\r\n  weekDaysMin: [\r\n    'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'\r\n  ],\r\n  dateFormat: 'MM-dd-yyyy'\r\n}"
                }
            ],
            "src/app/datepicker/configs/locales/ru.ts": [
                {
                    "name": "localeRu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/configs/locales/ru.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Required<IDatepickerLocaleConfig>",
                    "defaultValue": "{\r\n  weekStart: 1,\r\n  months: [\r\n    'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n    'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\r\n  ],\r\n  weekDaysMin: [\r\n    'Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'\r\n  ],\r\n  dateFormat: 'dd.MM.yyyy'\r\n}"
                }
            ],
            "src/app/datepicker/configs/locales/index.ts": [
                {
                    "name": "locales",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/datepicker/configs/locales/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, Required<IDatepickerLocaleConfig>>",
                    "defaultValue": "{\r\n  ru: localeRu,\r\n  en: localeEn\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/datepicker/datepicker.module.ts": [
                {
                    "name": "getWeekNamesByWeekStart",
                    "file": "src/app/datepicker/datepicker.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "weekNames",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "weekStart",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string[]",
                    "jsdoctags": [
                        {
                            "name": "weekNames",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "weekStart",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/datepicker/components/datepicker-overlay/datepicker-overlay.component.ts": [
                {
                    "name": "EPickerType",
                    "childs": [
                        {
                            "name": "Years",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Months",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Days",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Time",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/datepicker/components/datepicker-overlay/datepicker-overlay.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/datepicker/models/DatepickerConfig.ts": [
                {
                    "name": "TConfig",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/datepicker/models/DatepickerConfig.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "src/app/datepicker/models/TDatepickerWeekStart.ts": [
                {
                    "name": "TDatepickerWeekStart",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"0\" | \"1\"",
                    "file": "src/app/datepicker/models/TDatepickerWeekStart.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Datepicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatepickerTime",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-input/Datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-input/datepicker-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-month/datepicker-month.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerMonthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-months/datepicker-months.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerMonthsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-overlay/datepicker-overlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerOverlayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-time/datepicker-time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerTimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/components/datepicker-years/datepicker-years.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerYearsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/configs/locales/en.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "localeEn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/configs/locales/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "locales",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/configs/locales/ru.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "localeRu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/datepicker.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getWeekNamesByWeekStart",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/injection-tokens/DatepickerLocale.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatepickerLocale",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/DatepickerConfig.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DatepickerConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/DatepickerConfig.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IInitConfig",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/DatepickerConfig.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPartialConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/DatepickerConfig.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDatepickerConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/DatepickerDate.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DatepickerDate",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/DatepickerOverlayRef.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DatepickerOverlayRef",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/DatepickerTime.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DatepickerTime",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/IDatepickerLocale.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDatepickerLocale",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/models/IDatepickerLocaleConfig.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDatepickerLocaleConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/services/datepicker-date.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DatepickerDateService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/services/datepicker-overlay.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DatepickerOverlayService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/services/datepicker-overlay.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatepickerConfigToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/services/datepicker.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DatepickerService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/datepicker/utils/getMaskFormat.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getMaskFormat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/destroy.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DestroyService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/svg-icons/components/svg-icon/svg-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SvgIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}